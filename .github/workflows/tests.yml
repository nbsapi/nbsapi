name: Build wheel, release and publish on new tag

on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm
          submodules: true  # Optional, use if you have submodules

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Enable cache, bust if lockfile changes
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up specified Python
        run: uv python install
          
      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run pytest tests

      - name: Build wheel
        run: uv build --no-sources --wheel  -o dist

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: |
            ./dist/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Optional, use if you use setuptools_scm
        submodules: true  # Optional, use if you have submodules

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Build SDist
      run: uv build --no-sources --sdist -o dist

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz

  release_artifacts:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: Release repaired and tested wheels
    needs: build_and_test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download compressed artifacts
      id: download
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: 'List downloaded files'
      run: ls ${{ steps.download.outputs.download-path }}/**/*.*

    - name: Create release and upload wheels
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "${{ steps.download.outputs.download-path }}/**/*.whl,${{ steps.download.outputs.download-path }}/**/*.gz,${{ steps.download.outputs.download-path }}/**/*.so,${{ steps.download.outputs.download-path }}/**/*.dylib,${{ steps.download.outputs.download-path }}/**/*.lib,${{ steps.download.outputs.download-path }}/**/*.dll"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: PyPI Publish
      uses: pypa/gh-action-pypi-publish@v1
      with:
        packages-dir: ${{ steps.download.outputs.download-path }}/**/
