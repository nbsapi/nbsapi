[project]
name = "nbsapi"
authors = [
    { name="Stephan HÃ¼gel", email="urschrei@gmail.com" }
]
requires-python = ">=3.12"
license = {text = "MIT License"}
keywords = ["Geo"]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: GIS"
    ]
version = "0.1.0"
description = "An API for nature-based solutions"
readme = "README.md"
dependencies = [
    "alembic>=1.13.2",
    "bcrypt>=4.2.1",
    "email-validator>=2.2.0",
    "fastapi>=0.112.2",
    "geoalchemy2>=0.15.2",
    "geojson>=3.1.0",
    "greenlet>=3.1.0",
    "httpx>=0.27.2",
    "passlib>=1.7.4",
    "psycopg>=3.2.1",
    "pydantic-settings>=2.5.2",
    "pyjwt>=2.9.0",
    "pytest>=8.3.3",
    "python-multipart==0.0.18",
    "shapely>=2.0.6",
    "sqlmodel>=0.0.22",
    "uvicorn>=0.32.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.hatch.build.targets.wheel]
packages = ["src/nbsapi"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["F", "E", "W", "N", "D4", "UP", "PL", "TRY", "PERF", "FURB", "RUF", "S", "DTZ"]
ignore = ["ANN001", "ANN003", "ANN202", "ANN201", "DOC201", "E501", "PLR0904", "PLR0913", "PLR0917", "SLF001", "FIX002", "D400", "D415"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
